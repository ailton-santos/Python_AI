# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Arv22sz61jdzB-ZT7lxm3Yf8HPOhKyeV
"""

import pandas as pd
import numpy as np
import random

from sklearn.feature_extraction.text import TfidfTransformer , TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB

tweets = []
sentimentos = []

# Tweets aleatorios
palavras_pos = ['maravilhoso','inclivel','adoro','recomendo','perfeito']
palavras_neg = ['ruim','horrivel','decepcionante','não recomendo','pessimo']
palavras_neu = ['bom','legal','ok','interressante','informativo']

for _ in range(100):
  #tweet positivo
  tweet_pos = random.choice(palavras_pos) + " " + random.choice(palavras_pos)
  tweets.append(tweet_pos)
  sentimentos.append(2)

  #tweet neutro
  tweet_neu = random.choice(palavras_neu) + " " + random.choice(palavras_neu)
  tweets.append(tweet_neu)
  sentimentos.append(1)

  #tweet negativos
  tweet_neg = random.choice(palavras_neg) + " " + random.choice(palavras_neg)
  tweets.append(tweet_neg)
  sentimentos.append(0)

dados_tweets = pd.DataFrame({
    'tweet' : tweets,
    'sentimento': sentimentos,
})

dados_tweets.to_csv('dados_tweets.csv', index=False)

dados_tweets = pd.read_csv('dados_tweets.csv')

#separar tweets e rotulos
tweets = dados_tweets ['tweet']
rotulos = dados_tweets ['sentimento']

# conversão de tweets em vetores de palavras
vectorizar = TfidfVectorizer ()
vectores_tweets = vectorizar.fit_transform(tweets)

# Dividir treino e teste
X_treino , X_teste, y_treino, y_teste = train_test_split(vectores_tweets, rotulos, test_size=0.2,random_state=42)

# treino segundo naive bayes
modelo_nb = MultinomialNB()
modelo_nb.fit(X_treino , y_treino)

# desempenho Acuracia
acuracia = modelo_nb.score(X_teste , y_teste)
print('acuracia do modelo', acuracia)

#Classificação de novos tweets
tweet_novo = 'Amei o novo produto da marca! #maravilhoso'
vector_novo = vectorizar.transform([tweet_novo])
sentimento_predito = modelo_nb.predict(vector_novo)
print('sentimento predito para o novo tweet: ', sentimento_predito[0])